name: CI/CD Pipeline

on:
  push:
    branches:
      - master # Runs when pushing to the master branch

jobs:
  build:
    if: github.actor == 'Olorin4'
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Node.js
      - name: Read Node.js version from .nvmrc
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run tests (skips failure if no tests exist)
      - name: Run tests
        run: npm test --passWithNoTests

      # Step 5: Generate .env file from GitHub Secrets
      - name: Generate .env file
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "SERVER_IP=${{ secrets.SERVER_IP }}" >> .env
          echo "TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }}" >> .env
          echo "TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}" >> .env
          echo "TWILIO_TWIML_APP_SID=${{ secrets.TWILIO_TWIML_APP_SID }}" >> .env
          echo "TWILIO_CALLER_ID=${{ secrets.TWILIO_CALLER_ID }}" >> .env
          echo "TWILIO_API_KEY=${{ secrets.TWILIO_API_KEY }}" >> .env
          echo "TWILIO_API_SECRET=${{ secrets.TWILIO_API_SECRET }}" >> .env
          echo "DB_URL=${{ secrets.DB_URL }}" >> .env
          echo "EMAIL_HOST=${{ secrets.EMAIL_HOST }}" >> .env
          echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env
          echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env
          echo "EMAIL_FROM=${{ secrets.EMAIL_FROM }}" >> .env
          echo "EMAIL_PORT=${{ secrets.EMAIL_PORT }}" >> .env

      # Step 6: Deploy to Server (test)
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_AWS_SERVER_KEY }}

      - name: Deploy to Server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          # Add server to known hosts
          ssh-keyscan -H "${{ secrets.SERVER_IP }}" >> ~/.ssh/known_hosts

          echo "ðŸš€ Transferring files to the server using rsync..."
          rsync -avz --exclude='node_modules' --exclude='.git' --exclude='.github' --exclude='logs' ./ nick-kalas@$SERVER_IP:/home/nick-kalas/apps/twilio-voip

          echo "ðŸš€ Installing dependencies and restarting PM2..."
          ssh nick-kalas@$SERVER_IP << 'EOF'

            # Source nvm and use the correct node version
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use

            cd /home/nick-kalas/apps/twilio-voip
            
            echo "ðŸš€ Installing dependencies..."
            npm install --omit=dev

            echo "ðŸš€ Restarting PM2 application..."
            export NODE_TLS_REJECT_UNAUTHORIZED=0
            pm2 restart twilio-voip || pm2 start index.js --name twilio-voip
            pm2 save
            
            echo "âœ… Deployment completed successfully."
          EOF
